{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddEditTicketComponent = class AddEditTicketComponent {\n  constructor(fb, _ticketService, router, toastr, aRouter) {\n    this.fb = fb;\n    this._ticketService = _ticketService;\n    this.router = router;\n    this.toastr = toastr;\n    this.aRouter = aRouter;\n    this.loading = false;\n    this.operacion = 'Añadir ';\n    this.formTicket = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name: ['', Validators.required],\n      quantity: [null, Validators.required],\n      price: [null, Validators.required],\n      totalPrice: [null]\n    });\n    this.id = aRouter.snapshot.paramMap.get(\"id\");\n  }\n  ngOnInit() {\n    if (this.id != null) {\n      this.operacion = 'Actualizar ';\n      this.getTicket(this.id);\n    }\n  }\n  addTicket() {\n    const ticket = {\n      name: this.formTicket.value.name,\n      quantity: this.formTicket.value.quantity,\n      price: this.formTicket.value.price,\n      totalprice: this.formTicket.value.totalPrice\n    };\n    this.loading = true;\n    if (this.id !== null) {\n      //Es update\n      this._ticketService.updateTicket(this.id, ticket).subscribe(() => {\n        this.toastr.info(`El ticket ${ticket.name} fue actualizado con exito`, 'Ticket actualizado');\n        this.loading = false;\n        this.router.navigate(['/']);\n      });\n    } else {\n      //Es crear\n      this._ticketService.crateProduco(ticket).subscribe(() => {\n        this.toastr.success(`El ticket ${ticket.name} fue agregado con exito`, 'Ticket agregado');\n        this.loading = false;\n        this.router.navigate(['/']);\n      });\n    }\n  }\n  getTicket(id) {\n    this.loading = true;\n    this._ticketService.getTicket(id).subscribe(data => {\n      this.loading = false;\n      this.formTicket.patchValue({\n        name: data.name,\n        quantity: data.quantity,\n        price: data.price,\n        totalPrice: data.totalprice\n      });\n    });\n  }\n};\nAddEditTicketComponent = __decorate([Component({\n  selector: 'app-add-edit-ticket',\n  templateUrl: './add-edit-ticket.component.html',\n  styleUrls: ['./add-edit-ticket.component.css']\n})], AddEditTicketComponent);\nexport { AddEditTicketComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","AddEditTicketComponent","constructor","fb","_ticketService","router","toastr","aRouter","formTicket","group","name","required","quantity","price","totalPrice","id","snapshot","paramMap","get","ngOnInit","operacion","getTicket","addTicket","ticket","value","totalprice","loading","updateTicket","subscribe","info","navigate","crateProduco","success","data","patchValue","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\calca\\Downloads\\feature-tickets\\BackOfficeEA\\backOffice\\src\\app\\components\\add-edit-tickets\\add-edit-tickets.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ID, Ticket } from 'src/app/interfaces/ticket';\r\nimport { ListTicketsComponent } from '../list-tickets/list-tickets.component';\r\nimport { TicketsService } from 'src/app/services/tickets.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-ticket',\r\n  templateUrl: './add-edit-ticket.component.html',\r\n  styleUrls: ['./add-edit-ticket.component.css']\r\n})\r\nexport class AddEditTicketComponent {\r\n  formTicket: FormGroup;\r\n  loading: boolean = false;\r\n  id: string;\r\n  operacion: string = 'Añadir ';\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _ticketService: TicketsService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private aRouter: ActivatedRoute) {\r\n    this.formTicket = this.fb.group({\r\n      //Para poner mas de una validacion hay que ponerlas entre claudators\r\n      name: ['', Validators.required],\r\n      quantity: [null, Validators.required],\r\n      price: [null, Validators.required],\r\n      totalPrice: [null]\r\n    })\r\n    this.id = aRouter.snapshot.paramMap.get(\"id\")!;\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.id != null) {\r\n      this.operacion = 'Actualizar ';\r\n      this.getTicket(this.id);\r\n    }\r\n  }\r\n\r\n\r\n  addTicket() {\r\n    const ticket: Ticket = {\r\n      name: this.formTicket.value.name,\r\n      quantity: this.formTicket.value.quantity,\r\n      price: this.formTicket.value.price,\r\n      totalprice: this.formTicket.value.totalPrice,\r\n\r\n    }\r\n\r\n    this.loading = true;\r\n    if (this.id !== null) {\r\n      //Es update\r\n      this._ticketService.updateTicket(this.id, ticket).subscribe(() => {\r\n        this.toastr.info(`El ticket ${ticket.name} fue actualizado con exito`, 'Ticket actualizado');\r\n        this.loading = false;\r\n        this.router.navigate(['/']);\r\n      })\r\n    } else {\r\n      //Es crear\r\n      this._ticketService.crateProduco(ticket).subscribe(() => {\r\n        this.toastr.success(`El ticket ${ticket.name} fue agregado con exito`, 'Ticket agregado')\r\n        this.loading = false;\r\n        this.router.navigate(['/']);\r\n      })\r\n    }\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n  getTicket(id: string) {\r\n    this.loading = true;\r\n    this._ticketService.getTicket(id).subscribe((data: Ticket) => {\r\n      this.loading = false;\r\n      this.formTicket.patchValue({\r\n        name: data.name,\r\n        quantity: data.quantity,\r\n        price: data.price,\r\n        totalPrice: data.totalprice,\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}