{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.endpoint;\n  }\n  getListUsers() {\n    const myApiUrl = 'user/all';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  deleteUser(id) {\n    const myApiUrl = 'user/';\n    return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  crateUser(user) {\n    const myApiUrl = 'user/';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, user);\n  }\n  getUser(id) {\n    const myApiUrl = 'user/';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  updateUser(id, user) {\n    const myApiUrl = 'user/';\n    return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, user);\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAGJ,WAAW,CAACK,QAAQ;EAGtC;EAEAC,YAAY;IACV,MAAMC,QAAQ,GAAW,UAAU;IACnC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,EAAE,CAAC;EAC7D;EAEAE,UAAU,CAACC,EAAM;IACf,MAAMH,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACP,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EAEnE;EAEAE,SAAS,CAACC,IAAU;IAClB,MAAMN,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACW,IAAI,CAAO,GAAG,IAAI,CAACV,QAAQ,GAAGG,QAAQ,EAAE,EAAEM,IAAI,CAAC;EAClE;EAEAE,OAAO,CAACL,EAAU;IAChB,MAAMH,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAO,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EAChE;EAEAM,UAAU,CAACN,EAAU,EAAEG,IAAU;IAC/B,MAAMN,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACb,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,EAAEG,IAAI,CAAC;EACtE;;AAlCWZ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;EAAAkB,YAFX;AAAM","names":["environment","UsersService","constructor","http","myAppUrl","endpoint","getListUsers","myApiUrl","get","deleteUser","id","delete","crateUser","user","post","getUser","updateUser","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\calca\\Downloads\\BackOfficeEA-develop\\backOffice\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ID, User } from '../interfaces/user';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n  \r\n  private myAppUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.myAppUrl = environment.endpoint;\r\n\r\n    \r\n  }\r\n\r\n  getListUsers(): Observable<User[]> {\r\n    const myApiUrl: string = 'user/all'\r\n    return this.http.get<User[]>(`${this.myAppUrl}${myApiUrl}`)\r\n  }\r\n\r\n  deleteUser(id: ID): Observable<void> {\r\n    const myApiUrl: string = 'user/'\r\n    return this.http.delete<void>(`${this.myAppUrl}${myApiUrl}${id}`)\r\n\r\n  }\r\n\r\n  crateUser(user: User): Observable<User> {\r\n    const myApiUrl: string = 'user/'\r\n    return this.http.post<User>(`${this.myAppUrl}${myApiUrl}`, user);\r\n  }\r\n\r\n  getUser(id: string): Observable<User> {\r\n    const myApiUrl: string = 'user/';\r\n    return this.http.get<User>(`${this.myAppUrl}${myApiUrl}${id}`);\r\n  }\r\n\r\n  updateUser(id: string, user: User): Observable<User> {\r\n    const myApiUrl: string = 'user/';\r\n    return this.http.put<User>(`${this.myAppUrl}${myApiUrl}${id}`, user);\r\n  }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}