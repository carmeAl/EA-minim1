{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/productos.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction AddEditProductoComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo nombre es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditProductoComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo cantidad es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditProductoComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo precio es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AddEditProductoComponent {\n  constructor(fb, _productService) {\n    this.fb = fb;\n    this._productService = _productService;\n    this.formProducto = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name: ['', Validators.required],\n      quantity: [null, Validators.required],\n      price: [null, Validators.required],\n      totalPrice: [null, Validators.required]\n    });\n  }\n  addProducto() {\n    const product = {\n      name: this.formProducto.value.name,\n      quantity: this.formProducto.value.quantity,\n      price: this.formProducto.value.price,\n      totalprice: this.formProducto.value.totalprice\n    };\n    this._productService.crateProduco(product).subscribe(() => {\n      console.log('Producto Agregado');\n    });\n  }\n}\nAddEditProductoComponent.ɵfac = function AddEditProductoComponent_Factory(t) {\n  return new (t || AddEditProductoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductosService));\n};\nAddEditProductoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditProductoComponent,\n  selectors: [[\"app-add-edit-producto\"]],\n  decls: 21,\n  vars: 5,\n  consts: [[1, \"row\", \"mt-1\"], [1, \"col-lg-4\", \"offset-lg-4\"], [1, \"card\", \"bg-secondary\", \"mb-3\", 2, \"max-width\", \"25rem\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Ingrese nombre\", 1, \"form-control\"], [4, \"ngIf\"], [\"formControlName\", \"quantity\", \"type\", \"number\", \"placeholder\", \"Ingrese cantidad comprado\", 1, \"form-control\", \"mt-2\"], [\"formControlName\", \"price\", \"type\", \"number\", \"placeholder\", \"Ingrese precio individual\", 1, \"form-control\", \"mt-2\"], [\"formControlName\", \"totalPrice\", \"type\", \"numer\", \"placeholder\", \"Ingrese precio total\", 1, \"form-control\", \"mt-2\"], [1, \"row\", \"mt-2\", \"text-center\"], [1, \"col-lg-6\"], [\"routerLink\", \"/\", \"type\", \"button\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function AddEditProductoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtext(4, \"Agregar producto\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEditProductoComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.addProducto();\n      });\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵtemplate(8, AddEditProductoComponent_span_8_Template, 4, 0, \"span\", 7);\n      i0.ɵɵelement(9, \"input\", 8);\n      i0.ɵɵtemplate(10, AddEditProductoComponent_span_10_Template, 4, 0, \"span\", 7);\n      i0.ɵɵelement(11, \"input\", 9);\n      i0.ɵɵtemplate(12, AddEditProductoComponent_span_12_Template, 4, 0, \"span\", 7);\n      i0.ɵɵelement(13, \"input\", 10);\n      i0.ɵɵelementStart(14, \"div\", 11)(15, \"div\", 12)(16, \"button\", 13);\n      i0.ɵɵtext(17, \"Volver\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 12)(19, \"button\", 14);\n      i0.ɵɵtext(20, \"Agregar\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.formProducto);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.formProducto.get(\"name\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.formProducto.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.formProducto.get(\"quantity\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx.formProducto.get(\"quantity\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.formProducto.get(\"price\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx.formProducto.get(\"price\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"disabled\", ctx.formProducto.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICM/CC,4BAAkG;IAC9FA,oCAAmB;IAAAA,8BAAQ;IAAAA,yBAAS;IAAAA,iBAAS;;;;;IAGjDA,4BAA0G;IACtGA,sCAAqB;IAAAA,8BAAQ;IAAAA,yBAAS;IAAAA,iBAAS;;;;;IAGnDA,4BAAoG;IAChGA,oCAAmB;IAAAA,8BAAQ;IAAAA,yBAAS;IAAAA,iBAAS;;;ADLrE,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,EAAc,EAAUC,eAAgC;IAAxD,OAAE,GAAFD,EAAE;IAAsB,oBAAe,GAAfC,eAAe;IACzD,IAAI,CAACC,YAAY,GAAC,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9B;MACAC,IAAI,EAAC,CAAC,EAAE,EAACR,UAAU,CAACS,QAAQ,CAAC;MAC7BC,QAAQ,EAAC,CAAC,IAAI,EAACV,UAAU,CAACS,QAAQ,CAAC;MACnCE,KAAK,EAAC,CAAC,IAAI,EAACX,UAAU,CAACS,QAAQ,CAAC;MAChCG,UAAU,EAAC,CAAC,IAAI,EAACZ,UAAU,CAACS,QAAQ;KACrC,CAAC;EACJ;EAEAI,WAAW;IACT,MAAMC,OAAO,GAAU;MACrBN,IAAI,EAAC,IAAI,CAACF,YAAY,CAACS,KAAK,CAACP,IAAI;MACjCE,QAAQ,EAAC,IAAI,CAACJ,YAAY,CAACS,KAAK,CAACL,QAAQ;MACzCC,KAAK,EAAC,IAAI,CAACL,YAAY,CAACS,KAAK,CAACJ,KAAK;MACnCK,UAAU,EAAC,IAAI,CAACV,YAAY,CAACS,KAAK,CAACC;KAEpC;IACD,IAAI,CAACX,eAAe,CAACY,YAAY,CAACH,OAAO,CAAC,CAACI,SAAS,CAAC,MAAI;MACvDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC;EAEJ;;AAzBWlB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXrCxB,8BAAsB;MAG2BA,gCAAgB;MAAAA,iBAAM;MAC3DA,8BAAuB;MACcA;QAAA,OAAYyB,iBAAa;MAAA,EAAC;MACvDzB,2BAA4F;MAC5FA,2EAEO;MACPA,2BAAkH;MAClHA,6EAEO;MACPA,4BAA+G;MAC/GA,6EAEO;MACPA,6BAA8G;MAC9GA,gCAAkC;MAEqCA,uBAAM;MAAAA,iBAAS;MAElFA,gCAAsB;MAC8DA,wBAAO;MAAAA,iBAAS;;;;;;MAnBtGA,eAA0B;MAA1BA,4CAA0B;MAErBA,eAAyF;MAAzFA,8LAAyF;MAIzFA,eAAiG;MAAjGA,sMAAiG;MAIjGA,eAA2F;MAA3FA,gMAA2F;MASlFA,eAAiC;MAAjCA,mDAAiC","names":["Validators","i0","AddEditProductoComponent","constructor","fb","_productService","formProducto","group","name","required","quantity","price","totalPrice","addProducto","product","value","totalprice","crateProduco","subscribe","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\calca\\Downloads\\BackOffice\\backOffice\\src\\app\\components\\add-edit-producto\\add-edit-producto.component.ts","C:\\Users\\calca\\Downloads\\BackOffice\\backOffice\\src\\app\\components\\add-edit-producto\\add-edit-producto.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Producto } from 'src/app/interfaces/producto';\nimport { ListProductosComponent } from '../list-productos/list-productos.component';\nimport { ProductosService } from 'src/app/services/productos.service';\n\n@Component({\n  selector: 'app-add-edit-producto',\n  templateUrl: './add-edit-producto.component.html',\n  styleUrls: ['./add-edit-producto.component.css']\n})\nexport class AddEditProductoComponent {\n  formProducto:FormGroup;\n  \n  constructor(private fb:FormBuilder, private _productService:ProductosService){\n    this.formProducto=this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name:['',Validators.required],\n      quantity:[null,Validators.required],\n      price:[null,Validators.required],\n      totalPrice:[null,Validators.required],\n    })\n  }\n\n  addProducto(){\n    const product:Producto={\n      name:this.formProducto.value.name,\n      quantity:this.formProducto.value.quantity,\n      price:this.formProducto.value.price,\n      totalprice:this.formProducto.value.totalprice,\n    \n    }\n    this._productService.crateProduco(product).subscribe(()=>{\n      console.log('Producto Agregado');\n    })\n\n  }\n\n}\n","<div class=\"row mt-1\">\n    <div class=\"col-lg-4 offset-lg-4\">\n        <div class=\"card bg-secondary mb-3\" style=\"max-width: 25rem;\">\n            <div class=\"card-header text-center\">Agregar producto</div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"formProducto\" (ngSubmit)=\"addProducto()\">\n                    <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Ingrese nombre\">\n                    <span *ngIf=\"formProducto.get('name')?.hasError('required') && formProducto.get('name')?.touched\">\n                        El campo nombre es <strong>requerido</strong>\n                    </span>\n                    <input formControlName=\"quantity\" type=\"number\" class=\"form-control mt-2\" placeholder=\"Ingrese cantidad comprado\">\n                    <span *ngIf=\"formProducto.get('quantity')?.hasError('required') && formProducto.get('quantity')?.touched\">\n                        El campo cantidad es <strong>requerido</strong>\n                    </span>\n                    <input formControlName=\"price\" type=\"number\" class=\"form-control mt-2\" placeholder=\"Ingrese precio individual\">\n                    <span *ngIf=\"formProducto.get('price')?.hasError('required') && formProducto.get('price')?.touched\">\n                        El campo precio es <strong>requerido</strong>\n                    </span>\n                    <input formControlName=\"totalPrice\" type=\"numer\" class=\"form-control mt-2\" placeholder=\"Ingrese precio total\">\n                    <div class=\"row mt-2 text-center\">\n                        <div class=\"col-lg-6\">\n                            <button routerLink=\"/\" type=\"button\" class=\"btn btn-secondary\">Volver</button>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <button [disabled]=\"formProducto.invalid\" type=\"submit\" class=\"btn btn-primary\">Agregar</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}