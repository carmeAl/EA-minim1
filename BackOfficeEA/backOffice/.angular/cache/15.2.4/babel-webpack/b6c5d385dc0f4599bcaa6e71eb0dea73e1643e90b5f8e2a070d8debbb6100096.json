{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductosService {\n  getProductosTicket(id) {\n    const myApiUrl = `ticket/${id}/productos`;\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.endpoint;\n  }\n  getListProductos() {\n    const myApiUrl = 'producto/all';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  deleteProducto(id) {\n    const myApiUrl = 'producto/';\n    return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  crateProducto(producto) {\n    const myApiUrl = 'producto/';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, producto);\n  }\n  getProducto(id) {\n    const myApiUrl = 'producto/';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  updateProducto(id, product) {\n    const myApiUrl = 'producto/';\n    return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, product);\n  }\n  insertProductoToTicket(idTicket, idProducto) {\n    const myApiUrl = 'ticket/insert';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, {\n      params: {\n        \"idProducto\": `${idProducto}`,\n        \"idTicket\": `${idTicket}`\n      }\n    });\n  }\n}\nProductosService.ɵfac = function ProductosService_Factory(t) {\n  return new (t || ProductosService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductosService,\n  factory: ProductosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,gBAAgB;EAC3BC,kBAAkB,CAACC,EAAU;IAC3B,MAAMC,QAAQ,GAAQ,UAAUD,EAAE,YAAY;IAC9C,OAAO,IAAI,CAACE,IAAI,CAACC,GAAG,CAAa,GAAG,IAAI,CAACC,QAAQ,GAAGH,QAAQ,EAAE,CAAC;EACjE;EAGAI,YAAoBH,IAAe;IAAf,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACE,QAAQ,GAACP,WAAW,CAACS,QAAQ;EAEnC;EAEAC,gBAAgB;IACf,MAAMN,QAAQ,GAAQ,cAAc;IACpC,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAa,GAAG,IAAI,CAACC,QAAQ,GAAGH,QAAQ,EAAE,CAAC;EAChE;EAEAO,cAAc,CAACR,EAAK;IACnB,MAAMC,QAAQ,GAAQ,WAAW;IACjC,OAAO,IAAI,CAACC,IAAI,CAACO,MAAM,CAAO,GAAG,IAAI,CAACL,QAAQ,GAAGH,QAAQ,GAAGD,EAAE,EAAE,CAAC;EAElE;EAEAU,aAAa,CAACC,QAAiB;IAC9B,MAAMV,QAAQ,GAAQ,WAAW;IACjC,OAAO,IAAI,CAACC,IAAI,CAACU,IAAI,CAAW,GAAG,IAAI,CAACR,QAAQ,GAAGH,QAAQ,EAAE,EAACU,QAAQ,CAAC;EACxE;EAEAE,WAAW,CAACb,EAAS;IACpB,MAAMC,QAAQ,GAAQ,WAAW;IACjC,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAW,GAAG,IAAI,CAACC,QAAQ,GAAGH,QAAQ,GAAGD,EAAE,EAAE,CAAC;EACnE;EAEAc,cAAc,CAACd,EAAS,EAACe,OAAgB;IACxC,MAAMd,QAAQ,GAAQ,WAAW;IACjC,OAAO,IAAI,CAACC,IAAI,CAACc,GAAG,CAAW,GAAG,IAAI,CAACZ,QAAQ,GAAGH,QAAQ,GAAGD,EAAE,EAAE,EAACe,OAAO,CAAC;EAC3E;EAEAE,sBAAsB,CAACC,QAAe,EAACC,UAAiB;IACvD,MAAMlB,QAAQ,GAAQ,eAAe;IACrC,OAAO,IAAI,CAACC,IAAI,CAACU,IAAI,CAAS,GAAG,IAAI,CAACR,QAAQ,GAAGH,QAAQ,EAAE,EAAC;MAC1DmB,MAAM,EAAE;QACN,YAAY,EAAE,GAAGD,UAAU,EAAE;QACjC,UAAU,EAAE,GAAGD,QAAQ;;KAEtB,CAAC;EACH;;AA9CUpB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAuB,SAAhBvB,gBAAgB;EAAAwB,YAFf;AAAM","names":["environment","ProductosService","getProductosTicket","id","myApiUrl","http","get","myAppUrl","constructor","endpoint","getListProductos","deleteProducto","delete","crateProducto","producto","post","getProducto","updateProducto","product","put","insertProductoToTicket","idTicket","idProducto","params","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\calca\\Downloads\\feature-tickets\\BackOfficeEA\\backOffice\\src\\app\\services\\productos.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ID, Producto } from '../interfaces/producto';\r\nimport { Observable } from 'rxjs';\r\nimport { Ticket } from '../interfaces/ticket';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductosService {\r\n  getProductosTicket(id: string) {\r\n    const myApiUrl:string=`ticket/${id}/productos`;\r\n    return this.http.get<Producto[]>(`${this.myAppUrl}${myApiUrl}`)\r\n  }\r\n  private myAppUrl:string;\r\n\r\n  constructor(private http:HttpClient) {\r\n    this.myAppUrl=environment.endpoint;\r\n    \r\n   }\r\n\r\n   getListProductos():Observable<Producto[]>{\r\n    const myApiUrl:string='producto/all'\r\n    return this.http.get<Producto[]>(`${this.myAppUrl}${myApiUrl}`)\r\n   }\r\n\r\n   deleteProducto(id:ID):Observable<void>{\r\n    const myApiUrl:string='producto/'\r\n    return this.http.delete<void>(`${this.myAppUrl}${myApiUrl}${id}`)\r\n    \r\n   }\r\n\r\n   crateProducto(producto:Producto):Observable<Producto>{\r\n    const myApiUrl:string='producto/'\r\n    return this.http.post<Producto>(`${this.myAppUrl}${myApiUrl}`,producto);\r\n   }\r\n\r\n   getProducto(id:string):Observable<Producto>{\r\n    const myApiUrl:string='producto/';\r\n    return this.http.get<Producto>(`${this.myAppUrl}${myApiUrl}${id}`);\r\n   }\r\n\r\n   updateProducto(id:string,product:Producto):Observable<Producto>{\r\n    const myApiUrl:string='producto/';\r\n    return this.http.put<Producto>(`${this.myAppUrl}${myApiUrl}${id}`,product);\r\n   }\r\n\r\n   insertProductoToTicket(idTicket:string,idProducto:string):Observable<Ticket>{\r\n    const myApiUrl:string='ticket/insert'\r\n    return this.http.post<Ticket>(`${this.myAppUrl}${myApiUrl}`,{ \r\n      params: {\r\n        \"idProducto\": `${idProducto}`,\r\n    \"idTicket\": `${idTicket}`\r\n      }\r\n    });\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}