{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductosService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.endpoint;\n  }\n  getProductosTicket(id) {\n    const myApiUrl = `ticket/${id}/productos`;\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  getListProductos() {\n    const myApiUrl = 'producto/all';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  deleteProducto(id) {\n    const myApiUrl = 'producto/';\n    return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  crateProducto(producto) {\n    const myApiUrl = 'producto/';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, producto);\n  }\n  getProducto(id) {\n    const myApiUrl = 'producto/';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  updateProducto(id, product) {\n    const myApiUrl = 'producto/';\n    return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, product);\n  }\n  insertProductoToTicket(idTicket, idProducto) {\n    const myApiUrl = 'ticket/insert';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, {\n      \"idTicket\": `${idTicket}`,\n      \"idProducto\": `${idProducto}`\n    });\n  }\n}\nProductosService.ɵfac = function ProductosService_Factory(t) {\n  return new (t || ProductosService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductosService,\n  factory: ProductosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAGJ,WAAW,CAACK,QAAQ;EAGtC;EAEAC,kBAAkB,CAACC,EAAU;IAC3B,MAAMC,QAAQ,GAAW,UAAUD,EAAE,YAAY;IACjD,OAAO,IAAI,CAACJ,IAAI,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,QAAQ,GAAGI,QAAQ,EAAE,CAAC;EACjE;EAEAE,gBAAgB;IACd,MAAMF,QAAQ,GAAW,cAAc;IACvC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,QAAQ,GAAGI,QAAQ,EAAE,CAAC;EACjE;EAEAG,cAAc,CAACJ,EAAM;IACnB,MAAMC,QAAQ,GAAW,WAAW;IACpC,OAAO,IAAI,CAACL,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,QAAQ,GAAGI,QAAQ,GAAGD,EAAE,EAAE,CAAC;EAEnE;EAEAM,aAAa,CAACC,QAAkB;IAC9B,MAAMN,QAAQ,GAAW,WAAW;IACpC,OAAO,IAAI,CAACL,IAAI,CAACY,IAAI,CAAW,GAAG,IAAI,CAACX,QAAQ,GAAGI,QAAQ,EAAE,EAAEM,QAAQ,CAAC;EAC1E;EAEAE,WAAW,CAACT,EAAU;IACpB,MAAMC,QAAQ,GAAW,WAAW;IACpC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,QAAQ,GAAGI,QAAQ,GAAGD,EAAE,EAAE,CAAC;EACpE;EAEAU,cAAc,CAACV,EAAU,EAAEW,OAAiB;IAC1C,MAAMV,QAAQ,GAAW,WAAW;IACpC,OAAO,IAAI,CAACL,IAAI,CAACgB,GAAG,CAAW,GAAG,IAAI,CAACf,QAAQ,GAAGI,QAAQ,GAAGD,EAAE,EAAE,EAAEW,OAAO,CAAC;EAC7E;EAEAE,sBAAsB,CAACC,QAAgB,EAAEC,UAAkB;IACzD,MAAMd,QAAQ,GAAW,eAAe;IACxC,OAAO,IAAI,CAACL,IAAI,CAACY,IAAI,CAAS,GAAG,IAAI,CAACX,QAAQ,GAAGI,QAAQ,EAAE,EAAC;MAC1D,UAAU,EAAC,GAAGa,QAAQ,EAAE;MACxB,YAAY,EAAC,GAAGC,UAAU;KAC7B,CAAC;EACF;;AA/CWrB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAsB,SAAhBtB,gBAAgB;EAAAuB,YAFf;AAAM","names":["environment","ProductosService","constructor","http","myAppUrl","endpoint","getProductosTicket","id","myApiUrl","get","getListProductos","deleteProducto","delete","crateProducto","producto","post","getProducto","updateProducto","product","put","insertProductoToTicket","idTicket","idProducto","factory","providedIn"],"sourceRoot":"","sources":["/Users/victoriaromangarrido/Desktop/Uni/3B-Q2/EA/Projecte/BackOfficeEA/backOffice/src/app/services/productos.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ID, Producto } from '../interfaces/producto';\nimport { Observable } from 'rxjs';\nimport { Ticket } from '../interfaces/ticket';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n  \n  private myAppUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.myAppUrl = environment.endpoint;\n\n    \n  }\n\n  getProductosTicket(id: string) {\n    const myApiUrl: string = `ticket/${id}/productos`;\n    return this.http.get<Producto[]>(`${this.myAppUrl}${myApiUrl}`)\n  }\n\n  getListProductos(): Observable<Producto[]> {\n    const myApiUrl: string = 'producto/all'\n    return this.http.get<Producto[]>(`${this.myAppUrl}${myApiUrl}`)\n  }\n\n  deleteProducto(id: ID): Observable<void> {\n    const myApiUrl: string = 'producto/'\n    return this.http.delete<void>(`${this.myAppUrl}${myApiUrl}${id}`)\n\n  }\n\n  crateProducto(producto: Producto): Observable<Producto> {\n    const myApiUrl: string = 'producto/'\n    return this.http.post<Producto>(`${this.myAppUrl}${myApiUrl}`, producto);\n  }\n\n  getProducto(id: string): Observable<Producto> {\n    const myApiUrl: string = 'producto/';\n    return this.http.get<Producto>(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n\n  updateProducto(id: string, product: Producto): Observable<Producto> {\n    const myApiUrl: string = 'producto/';\n    return this.http.put<Producto>(`${this.myAppUrl}${myApiUrl}${id}`, product);\n  }\n\n  insertProductoToTicket(idTicket: string, idProducto: string): Observable<Ticket> {\n    const myApiUrl: string = 'ticket/insert'\n    return this.http.post<Ticket>(`${this.myAppUrl}${myApiUrl}`,{\n      \"idTicket\":`${idTicket}`,\n      \"idProducto\":`${idProducto}`\n  });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}