{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TicketsService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.endpoint + \"ticket/\";\n  }\n  getListTiket() {\n    const myApiUrl = 'all';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  deleteTicket(id) {\n    return this.http.delete(`${this.myAppUrl}${id}`);\n  }\n  crateTicket(ticket) {\n    return this.http.post(`${this.myAppUrl}`, ticket);\n  }\n  getTicket(id) {\n    return this.http.get(`${this.myAppUrl}${id}`);\n  }\n  updateTicket(id, ticket) {\n    return this.http.put(`${this.myAppUrl}${id}`, ticket);\n  }\n}\nTicketsService.ɵfac = function TicketsService_Factory(t) {\n  return new (t || TicketsService)(i0.ɵɵinject(i1.HttpClient));\n};\nTicketsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TicketsService,\n  factory: TicketsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAACJ,WAAW,CAACK,QAAQ,GAAC,SAAS;EAE7C;EAEAC,YAAY;IACX,MAAMC,QAAQ,GAAQ,KAAK;IAC3B,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAW,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,EAAE,CAAC;EAC9D;EAEAE,YAAY,CAACC,EAAK;IACjB,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACP,QAAQ,GAAGM,EAAE,EAAE,CAAC;EAEvD;EAEAE,WAAW,CAACC,MAAa;IACxB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAO,GAAG,IAAI,CAACV,QAAQ,EAAE,EAACS,MAAM,CAAC;EACvD;EAEAE,SAAS,CAACL,EAAS;IAClB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,QAAQ,GAAGM,EAAE,EAAE,CAAC;EACtD;EAEAM,YAAY,CAACN,EAAS,EAACG,MAAa;IACnC,OAAO,IAAI,CAACV,IAAI,CAACc,GAAG,CAAS,GAAG,IAAI,CAACb,QAAQ,GAAGM,EAAE,EAAE,EAACG,MAAM,CAAC;EAC7D;;AA5BUZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAiB,SAAdjB,cAAc;EAAAkB,YAFb;AAAM","names":["environment","TicketsService","constructor","http","myAppUrl","endpoint","getListTiket","myApiUrl","get","deleteTicket","id","delete","crateTicket","ticket","post","getTicket","updateTicket","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\calca\\Downloads\\BackOfficeEA-develop\\backOffice\\src\\app\\services\\tickets.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ID, Producto } from '../interfaces/producto';\r\nimport { Observable } from 'rxjs';\r\nimport { Ticket } from '../interfaces/ticket';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketsService {\r\n  private myAppUrl:string;\r\n\r\n  constructor(private http:HttpClient) {\r\n    this.myAppUrl=environment.endpoint+\"ticket/\";\r\n    \r\n   }\r\n\r\n   getListTiket():Observable<Ticket[]>{\r\n    const myApiUrl:string='all'\r\n    return this.http.get<Ticket[]>(`${this.myAppUrl}${myApiUrl}`)\r\n   }\r\n\r\n   deleteTicket(id:ID):Observable<void>{\r\n    return this.http.delete<void>(`${this.myAppUrl}${id}`)\r\n    \r\n   }\r\n\r\n   crateTicket(ticket:Ticket):Observable<void>{\r\n    return this.http.post<void>(`${this.myAppUrl}`,ticket);\r\n   }\r\n\r\n   getTicket(id:string):Observable<Ticket>{\r\n    return this.http.get<Ticket>(`${this.myAppUrl}${id}`);\r\n   }\r\n\r\n   updateTicket(id:string,ticket:Ticket):Observable<Ticket>{\r\n    return this.http.put<Ticket>(`${this.myAppUrl}${id}`,ticket);\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}